name: OSI Visualizer CI/CD

on:
  push:
    branches:
      - "automate-cicd"
      - "main"
  pull_request:
    branches:
      - "**"

jobs:
  build-backend:
    name: Build, Test, and Push Backend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Image Tag
        run: echo "IMAGE_TAG=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        if: github.actor != 'dependabot[bot]'
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Backend Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/osi-backend:${{ env.IMAGE_TAG }} -f ./osi-backend/Dockerfile.backend ./osi-backend

      - name: Run Backend Container
        run: |
          docker run -d -p 5000:5000 --name backend-container ${{ secrets.DOCKER_USERNAME }}/osi-backend:${{ env.IMAGE_TAG }}
          sleep 10

      - name: Health Check Backend
        run: curl --fail http://localhost:5000/livecheck || exit 1

      - name: Stop and Remove Backend Container
        run: docker stop backend-container && docker rm backend-container

      - name: Push Backend Image
        if: github.actor != 'dependabot[bot]'
        run: docker push ${{ secrets.DOCKER_USERNAME }}/osi-backend:${{ env.IMAGE_TAG }}
  deploy-backend:
    name: Deploy Backend
    runs-on: ubuntu-latest
    needs: build-backend
    steps: 
      - name: Authenticate with Azure
        if: github.actor != 'dependabot[bot]'
        run: |
          az login --service-principal --username ${{ secrets.ARM_CLIENT_ID }} --password ${{ secrets.ARM_CLIENT_SECRET }} --tenant ${{ secrets.ARM_TENANT_ID }}
      - name: Test the authentication
        if: github.actor != 'dependabot[bot]'
        run: az account show
      - name: Deploy Backend cnt app
        if: github.actor != 'dependabot[bot]'
        env:
          CONTAINER_APP_NAME: backend-cntapp
          AZURE_RESOURCE_GROUP: Programmers-Arena
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        run:  az containerapp update --name ${{ env.CONTAINER_APP_NAME }} --resource-group {{ env.AZURE_RESOURCE_GROUP }} --image ${{ env.DOCKER_USERNAME }}/osi-backend:${{ env.IMAGE_TAG }}
  build-frontend:
    name: Build, Test, and Push Frontend
    runs-on: ubuntu-latest
    needs: build-backend  

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Image Tag
        run: echo "IMAGE_TAG=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        if: github.actor != 'dependabot[bot]'
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Frontend Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/osi-frontend:${{ env.IMAGE_TAG }} -f ./osi-frontend/Dockerfile.frontend ./osi-frontend

      - name: Run Frontend Container
        run: |
          docker run -d -p 3000:3000 --name frontend-container ${{ secrets.DOCKER_USERNAME }}/osi-frontend:${{ env.IMAGE_TAG }}
          sleep 10

      - name: Health Check Frontend
        run: curl --fail http://localhost:3000 || exit 1

      - name: Stop and Remove Frontend Container
        run: docker stop frontend-container && docker rm frontend-container

      - name: Push Frontend Image
        if: github.actor != 'dependabot[bot]'
        run: docker push ${{ secrets.DOCKER_USERNAME }}/osi-frontend:${{ env.IMAGE_TAG }}

  