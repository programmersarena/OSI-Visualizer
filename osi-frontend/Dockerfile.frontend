# # Use an official Node.js image as base
# FROM node:22-alpine

# # Set the working directory inside the container
# WORKDIR /app

# # Copy package.json and package-lock.json before copying the rest of the files
# COPY package.json package-lock.json ./

# # Install dependencies (adding network retry to avoid failures)
# RUN npm install

# # Copy all project files
# COPY . .

# # Build the Next.js app
# RUN npm run build

# # Expose port 3000
# EXPOSE 3000

# # Start the Next.js app
# CMD ["npm", "run", "dev"]


# Stage 1: Build Stage
FROM node:22-alpine AS builder

# Set working directory
WORKDIR /app

# Copy package.json and package-lock.json for efficient caching
COPY package.json package-lock.json ./

# Install dependencies
RUN npm ci --omit=dev

# Copy the rest of the application
COPY . .

# Build the Next.js app (use 'production' for optimized build)
RUN npm run build

# Stage 2: Production Stage
FROM node:22-alpine AS runner

# Set working directory
WORKDIR /app

# Copy only necessary files from the builder stage
COPY --from=builder /app/package.json /app/package-lock.json ./
COPY --from=builder /app/.next ./.next
COPY --from=builder /app/public ./public

# Install only production dependencies
RUN npm ci --omit=dev

# Expose port 3000
EXPOSE 3000

# Command to run the app
CMD ["npm","run", "dev"]